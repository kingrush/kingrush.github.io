<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="262" onload="init(evt)" viewBox="0 0 1200 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="262.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="245" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="245" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java_start(Thread*) (1 samples, 0.05%)</title><rect x="1189.4" y="181" width="0.6" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text text-anchor="" x="1192.41" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[vdso] (271 samples, 13.52%)</title><rect x="786.9" y="149" width="159.4" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text text-anchor="" x="789.86" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[vdso]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sysret_check (3 samples, 0.15%)</title><rect x="580.9" y="149" width="1.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text text-anchor="" x="583.87" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>auditsys (21 samples, 1.05%)</title><rect x="276.6" y="149" width="12.4" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text text-anchor="" x="279.60" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_gettimeofday (33 samples, 1.65%)</title><rect x="341.9" y="149" width="19.5" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text text-anchor="" x="344.93" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pvclock_clocksource_read (62 samples, 3.09%)</title><rect x="899.3" y="133" width="36.5" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text text-anchor="" x="902.27" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >pvc..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>system_call_after_swapgs (1 samples, 0.05%)</title><rect x="1187.1" y="133" width="0.5" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text text-anchor="" x="1190.06" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kvm_clock_read (1 samples, 0.05%)</title><rect x="874.5" y="133" width="0.6" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text text-anchor="" x="877.55" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollOnce (1 samples, 0.05%)</title><rect x="1187.6" y="149" width="0.6" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text text-anchor="" x="1190.65" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_read_tsc (36 samples, 1.80%)</title><rect x="875.1" y="133" width="21.2" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text text-anchor="" x="878.14" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (2,005 samples, 100%)</title><rect x="10.0" y="213" width="1180.0" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/lang/Thread.run (2,002 samples, 99.85%)</title><rect x="10.0" y="197" width="1178.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java/lang/Thread.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.send (1 samples, 0.05%)</title><rect x="1187.6" y="101" width="0.6" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text text-anchor="" x="1190.65" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kfree (8 samples, 0.40%)</title><rect x="868.7" y="133" width="4.7" height="15.0" fill="rgb(253,153,0)" rx="2" ry="2" />
<text text-anchor="" x="871.66" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WatcherThread::run() (1 samples, 0.05%)</title><rect x="1189.4" y="165" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text text-anchor="" x="1192.41" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gettimeofday (293 samples, 14.61%)</title><rect x="773.9" y="165" width="172.4" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text text-anchor="" x="776.91" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__gettimeofday</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[vdso] (1,205 samples, 60.10%)</title><rect x="64.7" y="165" width="709.2" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text text-anchor="" x="67.73" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[vdso]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>current_kernel_time (15 samples, 0.75%)</title><rect x="333.1" y="149" width="8.8" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text text-anchor="" x="336.10" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>copy_user_enhanced_fast_string (69 samples, 3.44%)</title><rect x="292.5" y="149" width="40.6" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text text-anchor="" x="295.49" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cop..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_gettimeofday (6 samples, 0.30%)</title><rect x="935.8" y="133" width="3.5" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text text-anchor="" x="938.76" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::javaTimeMillis() (36 samples, 1.80%)</title><rect x="1165.9" y="165" width="21.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text text-anchor="" x="1168.87" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/concurrent/ArrayBlockingQueue.size (371 samples, 18.50%)</title><rect x="947.5" y="165" width="218.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text text-anchor="" x="950.53" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java/util/concurrent/ArrayBl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>unroll_tree_refs (32 samples, 1.60%)</title><rect x="755.1" y="149" width="18.8" height="15.0" fill="rgb(208,108,0)" rx="2" ry="2" />
<text text-anchor="" x="758.08" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>path_put (5 samples, 0.25%)</title><rect x="896.3" y="133" width="3.0" height="15.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text text-anchor="" x="899.32" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tracesys (6 samples, 0.30%)</title><rect x="751.5" y="149" width="3.6" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text text-anchor="" x="754.55" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>copy_to_user (3 samples, 0.15%)</title><rect x="820.4" y="133" width="1.8" height="15.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text text-anchor="" x="823.40" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>current_kernel_time (6 samples, 0.30%)</title><rect x="845.1" y="133" width="3.6" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text text-anchor="" x="848.12" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__do_softirq (1 samples, 0.05%)</title><rect x="1186.5" y="149" width="0.6" height="15.0" fill="rgb(210,110,0)" rx="2" ry="2" />
<text text-anchor="" x="1189.47" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>getnstimeofday (15 samples, 0.75%)</title><rect x="859.8" y="133" width="8.9" height="15.0" fill="rgb(223,123,0)" rx="2" ry="2" />
<text text-anchor="" x="862.84" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.pollNoWakeup (1 samples, 0.05%)</title><rect x="1188.2" y="181" width="0.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text text-anchor="" x="1191.23" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hash_futex (1 samples, 0.05%)</title><rect x="1188.2" y="149" width="0.6" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text text-anchor="" x="1191.23" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (2 samples, 0.10%)</title><rect x="1187.1" y="165" width="1.1" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text text-anchor="" x="1190.06" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/apache/kafka/clients/NetworkClient.wakeup (1 samples, 0.05%)</title><rect x="1187.6" y="85" width="0.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text text-anchor="" x="1190.65" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kvm_clock_get_cycles (9 samples, 0.45%)</title><rect x="410.8" y="149" width="5.3" height="15.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text text-anchor="" x="413.79" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="1189.4" y="101" width="0.6" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text text-anchor="" x="1192.41" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1188.8" y="197" width="0.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text text-anchor="" x="1191.82" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>copy_user_enhanced_fast_string (39 samples, 1.95%)</title><rect x="822.2" y="133" width="22.9" height="15.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text text-anchor="" x="825.17" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/zhiguan/compSnsPlat/kafka/uc/KafakConsumer.run (2 samples, 0.10%)</title><rect x="1187.1" y="181" width="1.1" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text text-anchor="" x="1190.06" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.send (1 samples, 0.05%)</title><rect x="1187.6" y="117" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text text-anchor="" x="1190.65" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_futex (1 samples, 0.05%)</title><rect x="1189.4" y="85" width="0.6" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text text-anchor="" x="1192.41" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[vdso] (1 samples, 0.05%)</title><rect x="1187.1" y="149" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text text-anchor="" x="1190.06" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>getnstimeofday (51 samples, 2.54%)</title><rect x="366.1" y="149" width="30.0" height="15.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text text-anchor="" x="369.06" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ge..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>unroll_tree_refs (12 samples, 0.60%)</title><rect x="939.3" y="133" width="7.0" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text text-anchor="" x="942.29" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>copy_to_user (6 samples, 0.30%)</title><rect x="289.0" y="149" width="3.5" height="15.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text text-anchor="" x="291.96" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_thread (1 samples, 0.05%)</title><rect x="1189.4" y="197" width="0.6" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text text-anchor="" x="1192.41" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pvclock_clocksource_read (141 samples, 7.03%)</title><rect x="472.6" y="149" width="83.0" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text text-anchor="" x="475.58" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >pvclock_c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ret_from_sys_call (8 samples, 0.40%)</title><rect x="555.6" y="149" width="4.7" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text text-anchor="" x="558.57" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>path_put (14 samples, 0.70%)</title><rect x="464.3" y="149" width="8.3" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text text-anchor="" x="467.34" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__audit_syscall_exit (47 samples, 2.34%)</title><rect x="786.9" y="133" width="27.6" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text text-anchor="" x="789.86" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_read_tsc (75 samples, 3.74%)</title><rect x="420.2" y="149" width="44.1" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text text-anchor="" x="423.20" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nati..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>dput (8 samples, 0.40%)</title><rect x="361.4" y="149" width="4.7" height="15.0" fill="rgb(210,110,0)" rx="2" ry="2" />
<text text-anchor="" x="364.35" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kvm_clock_get_cycles (2 samples, 0.10%)</title><rect x="873.4" y="133" width="1.1" height="15.0" fill="rgb(247,147,0)" rx="2" ry="2" />
<text text-anchor="" x="876.37" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__audit_syscall_exit (108 samples, 5.39%)</title><rect x="180.1" y="149" width="63.5" height="15.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text text-anchor="" x="183.08" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__audi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/concurrent/locks/ReentrantLock.lock (371 samples, 18.50%)</title><rect x="947.5" y="149" width="218.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text text-anchor="" x="950.53" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java/util/concurrent/locks/R..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_gettimeofday (14 samples, 0.70%)</title><rect x="848.7" y="133" width="8.2" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text text-anchor="" x="851.65" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (371 samples, 18.50%)</title><rect x="947.5" y="117" width="218.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text text-anchor="" x="950.53" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java/util/concurrent/locks/A..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (371 samples, 18.50%)</title><rect x="947.5" y="133" width="218.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text text-anchor="" x="950.53" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java/util/concurrent/locks/R..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>audit_syscall_entry (10 samples, 0.50%)</title><rect x="814.5" y="133" width="5.9" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text text-anchor="" x="817.52" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com/zhiguan/compSnsPlat/kafka/BatchQueue$DataListener.run (2,000 samples, 99.75%)</title><rect x="10.0" y="181" width="1177.1" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com/zhiguan/compSnsPlat/kafka/BatchQueue$DataListener.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::wait(bool, long, bool) (1 samples, 0.05%)</title><rect x="1189.4" y="133" width="0.6" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text text-anchor="" x="1192.41" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_init (2 samples, 0.10%)</title><rect x="946.3" y="165" width="1.2" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text text-anchor="" x="949.35" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator$HeartbeatThread.run (1 samples, 0.05%)</title><rect x="1188.2" y="197" width="0.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text text-anchor="" x="1191.23" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_gettimeofday (22 samples, 1.10%)</title><rect x="560.3" y="149" width="12.9" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text text-anchor="" x="563.27" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kvm_clock_read (7 samples, 0.35%)</title><rect x="416.1" y="149" width="4.1" height="15.0" fill="rgb(200,100,0)" rx="2" ry="2" />
<text text-anchor="" x="419.08" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>audit_syscall_entry (56 samples, 2.79%)</title><rect x="243.6" y="149" width="33.0" height="15.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text text-anchor="" x="246.65" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >au..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.05%)</title><rect x="1187.6" y="53" width="0.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text text-anchor="" x="1190.65" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>dput (5 samples, 0.25%)</title><rect x="856.9" y="133" width="2.9" height="15.0" fill="rgb(210,110,0)" rx="2" ry="2" />
<text text-anchor="" x="859.89" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sysret_audit (13 samples, 0.65%)</title><rect x="573.2" y="149" width="7.7" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text text-anchor="" x="576.22" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kfree (25 samples, 1.25%)</title><rect x="396.1" y="149" width="14.7" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text text-anchor="" x="399.07" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (1 samples, 0.05%)</title><rect x="1187.6" y="133" width="0.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text text-anchor="" x="1190.65" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::IWait(Thread*, long) (1 samples, 0.05%)</title><rect x="1189.4" y="117" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="1192.41" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__pthread_cond_timedwait (1 samples, 0.05%)</title><rect x="1188.2" y="165" width="0.6" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text text-anchor="" x="1191.23" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>system_call_after_swapgs (240 samples, 11.97%)</title><rect x="609.7" y="149" width="141.3" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text text-anchor="" x="612.71" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >system_call_after..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun/nio/ch/EPollArrayWrapper.interrupt (1 samples, 0.05%)</title><rect x="1187.6" y="37" width="0.6" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text text-anchor="" x="1190.65" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>system_call_fastpath (1 samples, 0.05%)</title><rect x="751.0" y="149" width="0.5" height="15.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text text-anchor="" x="753.96" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sysret_signal (46 samples, 2.29%)</title><rect x="582.6" y="149" width="27.1" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text text-anchor="" x="585.64" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/apache/kafka/common/network/Selector.wakeup (1 samples, 0.05%)</title><rect x="1187.6" y="69" width="0.6" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text text-anchor="" x="1190.65" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WatcherThread::sleep() const (1 samples, 0.05%)</title><rect x="1189.4" y="149" width="0.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text text-anchor="" x="1192.41" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
